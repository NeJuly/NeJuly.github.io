(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{580:function(e,n,t){"use strict";t.r(n);var s=t(4),a=Object(s.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("blockquote",[t("p",[e._v("MySQL 的 case when 的语法有两种：")]),e._v(" "),t("ul",[t("li",[e._v("简单函数\nCASE [col_name] WHEN [value1] THEN [result1]…ELSE [default] END")]),e._v(" "),t("li",[e._v("搜索函数\nCASE WHEN [expr] THEN [result1]…ELSE [default] END")])])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT\n    NAME '英雄',\n    CASE NAME\n        WHEN '德莱文' THEN\n            '斧子'\n        WHEN '德玛西亚-盖伦' THEN\n            '大宝剑'\n        WHEN '暗夜猎手-VN' THEN\n            '弩'\n        ELSE\n            '无'\n    END '装备'\nFROM\n    user_info;\n\n")])])]),t("blockquote",[t("p",[e._v("搜索函数")]),e._v(" "),t("blockquote",[t("p",[e._v("CASE WHEN [expr] THEN [result1]…ELSE [default] END\n搜索函数可以写判断，并且搜索函数只会返回第一个符合条件的值，其他case被忽略")])])]),e._v(" "),t("h2",{attrs:{id:"when-表达式中可以使用-and-连接条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#when-表达式中可以使用-and-连接条件"}},[e._v("#")]),e._v(" when 表达式中可以使用 and 连接条件")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT\n    NAME '英雄',\n    age '年龄',\n    CASE\n        WHEN age < 18 THEN\n            '少年'\n        WHEN age < 30 THEN\n            '青年'\n        WHEN age >= 30\n        AND age < 50 THEN\n            '中年'\n        ELSE\n            '老年'\n    END '状态'\nFROM\n    user_info;\n")])])]),t("h2",{attrs:{id:"聚合函数-sum-配合-case-when-的简单函数实现行转列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#聚合函数-sum-配合-case-when-的简单函数实现行转列"}},[e._v("#")]),e._v(" 聚合函数 sum 配合 case when 的简单函数实现行转列")]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("SELECT\n    st.stu_id '学号',\n    st.stu_name '姓名',\n    sum(CASE co.course_name WHEN '大学语文' THEN sc.scores ELSE 0 END) '大学语文',\n    sum(CASE co.course_name WHEN '新视野英语' THEN sc.scores ELSE 0 END) '新视野英语',\n    sum(CASE co.course_name WHEN '离散数学' THEN sc.scores ELSE 0 END) '离散数学',\n    sum(CASE co.course_name WHEN '概率论与数理统计' THEN sc.scores ELSE 0 END) '概率论与数理统计',\n    sum(CASE co.course_name WHEN '线性代数' THEN sc.scores ELSE 0 END) '线性代数',\n    sum(CASE co.course_name WHEN '高等数学' THEN sc.scores ELSE 0 END) '高等数学'\nFROM\n    edu_student st\nLEFT JOIN edu_score sc ON st.stu_id = sc.stu_id\nLEFT JOIN edu_courses co ON co.course_no = sc.course_no\nGROUP BY st.stu_id\nORDER BY st.stu_id desc;\n")])])]),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("行转列测试数据\n-- 创建表  学生表\nCREATE TABLE `edu_student` (\n    `stu_id` VARCHAR (16) NOT NULL COMMENT '学号',\n    `stu_name` VARCHAR (20) NOT NULL COMMENT '学生姓名',\n    PRIMARY KEY (`stu_id`)\n) COMMENT = '学生表' ENGINE = INNODB;\n\n-- 课程表\nCREATE TABLE `edu_courses` (\n    `course_no` VARCHAR (20) NOT NULL COMMENT '课程编号',\n    `course_name` VARCHAR (100) NOT NULL COMMENT '课程名称',\n    PRIMARY KEY (`course_no`)\n) COMMENT = '课程表' ENGINE = INNODB;\n\n-- 成绩表\nCREATE TABLE `edu_score` (\n    `stu_id` VARCHAR (16) NOT NULL COMMENT '学号',\n    `course_no` VARCHAR (20) NOT NULL COMMENT '课程编号',\n    `scores` FLOAT NULL DEFAULT NULL COMMENT '得分',\n    PRIMARY KEY (`stu_id`, `course_no`)\n) COMMENT = '成绩表' ENGINE = INNODB;\n\n-- 插入数据\n\n-- 学生表数据\n\nINSERT INTO edu_student (stu_id, stu_name)\nVALUES\n    ('1001', '盲僧'),('1002', '赵信'),('1003', '皇子'),\n    ('1004', '寒冰'),('1005', '蛮王'),('1006', '狐狸');\n\n-- 课程表数据\nINSERT INTO edu_courses (course_no, course_name)\nVALUES\n    ('C001', '大学语文'),('C002', '新视野英语'),('C003', '离散数学'),\n    ('C004','概率论与数理统计'),('C005', '线性代数'),('C006', '高等数学');\n\n-- 成绩表数据\nINSERT INTO edu_score (stu_id, course_no, scores)\nVALUES\n    ('1001', 'C001', 67),   ('1002', 'C001', 68),   ('1003', 'C001', 69),   ('1004', 'C001', 70),   ('1005', 'C001', 71),\n    ('1006', 'C001', 72),   ('1001', 'C002', 87),   ('1002', 'C002', 88),   ('1003', 'C002', 89),   ('1004', 'C002', 90),\n    ('1005', 'C002', 91),   ('1006', 'C002', 92),   ('1001', 'C003', 83),   ('1002', 'C003', 84),   ('1003', 'C003', 85),\n    ('1004', 'C003', 86),   ('1005', 'C003', 87),   ('1006', 'C003', 88),   ('1001', 'C004', 88),   ('1002', 'C004', 89),\n    ('1003', 'C004', 90),   ('1004', 'C004', 91),   ('1005', 'C004', 92),   ('1006', 'C004', 93),   ('1001', 'C005', 77),\n    ('1002', 'C005', 78),   ('1003', 'C005', 79);\n")])])]),t("blockquote",[t("p",[e._v("对于mybatis而言 通过case when 能更好的通过时间或者条件筛选。")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('<select id="getAdzoneNameData" resultType="">\n      SELECT\n      t.adzone_id as adzoneId, t.app_key as appKey, a.adzone_name as adzoneName, ta.authorized_name as authorizedName,\n      IFNULL(SUM(t.alipay_total_price),0) as sales,\n      IFNULL(SUM(t.pub_share_pre_fee),0) as allIncome,\n      count(t.tk_status) as totalOrder,\n      SUM(if(t.tk_status in (3,12), t.pub_share_pre_fee, 0)) as usedIncome,\n      SUM(t.tk_status in(3,12)) as usedOrder,\n      SUM(if(t.tk_status = 13 and t.tk_paid_time is not null,t.pub_share_pre_fee,0)) as refundIncome,\n      SUM(t.tk_status = 13 and t.tk_paid_time is not null) as refundOrder,\n      ROUND(SUM(t.tk_status = 13 and t.tk_paid_time is not null) * 100 / count(t.tk_status),2) as refundRate,\n      SUM(t.tk_paid_time is null) as unpaidOrder,\n      ROUND(SUM(t.tk_paid_time is null) * 100 / count(t.tk_status),2) as unpaidRate,\n      case\n      <foreach collection="days" item="item">\n        when t.tk_create_time between #{item.orderStartTime} and #{item.orderEndTime} then #{item.date}\n      </foreach>\n      end as putDate\n      from <include refid="tradeSonQuery"/> as t\n      left join taobao_appkey as ta on ta.app_key = t.app_key\n      left join adzones as a on a.adzone_id = t.adzone_id\n      GROUP BY t.adzone_id, putDate\n</select>\n')])])]),t("blockquote",[t("p",[e._v("解释如下")])]),e._v(" "),t("div",{staticClass:"language-mysql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("select *,\n    case\n        when t.tk_create_time between '2020-06-01 00:00:00' and '2020-06-01 23:59:59' then 2020-06-01\n        when t.tk_create_time between '2020-06-02 00:00:00' and '2020-06-02 23:59:59' then 2020-06-02\n        when t.tk_create_time between '2020-06-03 00:00:00' and '2020-06-03 23:59:59' then 2020-06-03\n    end as putDate\nfrom `table`\ngroup by table.field, putDate\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);